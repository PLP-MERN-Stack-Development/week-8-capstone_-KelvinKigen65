{"ast":null,"code":"var _jsxFileName = \"/home/kigen65/Dev/Freelancers-KE/freelance-portal/src/context/AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const login = userData => setUser(userData);\n  const logout = () => {\n    localStorage.removeItem(\"token\");\n    setUser(null);\n  };\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (token && !user) {\n      // Basic decode (for dev only — use backend verification in production)\n      try {\n        const payload = JSON.parse(atob(token.split(\".\")[1]));\n        login({\n          email: payload.email,\n          role: payload.role\n        });\n      } catch {\n        logout(); // If token is malformed\n      }\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"5s2qRsV95gTJBmaaTh11GoxYeGE=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","user","setUser","login","userData","logout","localStorage","removeItem","token","getItem","payload","JSON","parse","atob","split","email","role","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/kigen65/Dev/Freelancers-KE/freelance-portal/src/context/AuthContext.jsx"],"sourcesContent":["import { createContext, useContext, useState, useEffect } from \"react\";\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => useContext(AuthContext);\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n\n  const login = (userData) => setUser(userData);\n  const logout = () => {\n    localStorage.removeItem(\"token\");\n    setUser(null);\n  };\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (token && !user) {\n      // Basic decode (for dev only — use backend verification in production)\n      try {\n        const payload = JSON.parse(atob(token.split(\".\")[1]));\n        login({ email: payload.email, role: payload.role });\n      } catch {\n        logout(); // If token is malformed\n      }\n    }\n  }, []);\n\n  return (\n    <AuthContext.Provider value={{ user, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvE,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMO,OAAO,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMP,UAAU,CAACK,WAAW,CAAC;AAAA;AAACE,EAAA,CAAxCD,OAAO;AAEpB,OAAO,MAAME,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAEtC,MAAMY,KAAK,GAAIC,QAAQ,IAAKF,OAAO,CAACE,QAAQ,CAAC;EAC7C,MAAMC,MAAM,GAAGA,CAAA,KAAM;IACnBC,YAAY,CAACC,UAAU,CAAC,OAAO,CAAC;IAChCL,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;EAEDV,SAAS,CAAC,MAAM;IACd,MAAMgB,KAAK,GAAGF,YAAY,CAACG,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAID,KAAK,IAAI,CAACP,IAAI,EAAE;MAClB;MACA,IAAI;QACF,MAAMS,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACL,KAAK,CAACM,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACrDX,KAAK,CAAC;UAAEY,KAAK,EAAEL,OAAO,CAACK,KAAK;UAAEC,IAAI,EAAEN,OAAO,CAACM;QAAK,CAAC,CAAC;MACrD,CAAC,CAAC,MAAM;QACNX,MAAM,CAAC,CAAC,CAAC,CAAC;MACZ;IACF;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEX,OAAA,CAACC,WAAW,CAACsB,QAAQ;IAACC,KAAK,EAAE;MAAEjB,IAAI;MAAEE,KAAK;MAAEE;IAAO,CAAE;IAAAN,QAAA,EAClDA;EAAQ;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACtB,GAAA,CA3BWF,YAAY;AAAAyB,EAAA,GAAZzB,YAAY;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}